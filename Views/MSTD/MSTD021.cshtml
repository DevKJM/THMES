@using JSMES.WebUI.Alpha.Models.MasterStruct;
@using JSMES.WebUI.Alpha.App_GlobalResources;

@{
    ViewBag.Title = "Main";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            @(Html.DevExtreme().DataGrid<PartNumberMaster>()
                  .DataSource(d => d.WebApi().Controller("MSTD021WebApi").Key("PARTNUMBERID")
                      .OnBeforeSend("grdPartNumber_OnBeforeSend"))
                  .ID("grdPartNumber")
                  .Columns(columns =>
                  {
                      columns.AddFor(m => m.UDCF1)
                          .Lookup(lookup => lookup
                              .DataSource(d => d.WebApi()
                                  .Controller("COMA003WebApi").Key("SYSCODE")
                                  .LoadAction("CARTYPE_LIST"))
                              .DisplayExpr("SYSCODENAME")
                              .ValueExpr("SYSCODE")
                          )
                          .Caption(@LabelText.CARTYPE);
                      columns.AddFor(m => m.PARTNUMBER).SortOrder(SortOrder.Asc);
                      columns.AddFor(m => m.PRODUCTGROUP).Visible(false)
                          .Lookup(lookup => lookup
                              .DataSource(d => d.WebApi()
                                  .Controller("COMA003WebApi").Key("SYSCODE")
                                  .LoadAction("PRODUCTGROUP_LIST"))
                              .DisplayExpr("SYSCODENAME")
                              .ValueExpr("SYSCODE")
                          );
                      columns.AddFor(m => m.PRODUCTNAME);
                      columns.AddFor(m => m.PRODUCTTYPE)
                          .Lookup(lookup => lookup
                              .DataSource(d => d.WebApi()
                                  .Controller("COMA003WebApi").Key("SYSCODE")
                                  .LoadAction("PRODUCTTYPE_LIST"))
                              .DisplayExpr("SYSCODENAME")
                              .ValueExpr("SYSCODE")
                          );
                      columns.AddFor(m => m.DRAWINGNO).Visible(false);
                      columns.AddFor(m => m.SPEC);
                      columns.AddFor(m => m.SAFETYINVENTQUANTITY).Format(f => f.Type(Format.FixedPoint).Precision(0));
                      columns.AddFor(m => m.BOXPERQUANTITY).Format(f => f.Type(Format.FixedPoint).Precision(0));
                      columns.AddFor(m => m.UNITCODE)
                          .Lookup(lookup => lookup
                              .DataSource(d => d.WebApi()
                                  .Controller("COMA003WebApi").Key("SYSCODE")
                                  .LoadAction("UNITCODE_LIST"))
                              .DisplayExpr("SYSCODENAME")
                              .ValueExpr("SYSCODE")
                          );

                      //columns.Add().EditCellTemplate(new TemplateName("EmbeddedColor")).Visible(true).Caption("색상");
                      columns.AddFor(m => m.CUSTOMERPARTNUMBER);
                      columns.AddFor(m => m.UDCF2).Width(110)
                          .Caption("연결품번1")
                          
                          .EditCellTemplate(new TemplateName("ddlPartnumberList1"))
                          //.SetCellValue("AA");
                          .SetCellValue("function(newData , value , currentRowData)" +
                                        "{ if(value != null) {newData.UDCF2 = value.PARTNUMBER;}" +
                                        "else {newData.UDCF2 = null}} ");// +
                      //" newData.MEMO = value.PARTNUMBER; console.log(currentRowData);" +
                      //" if(value.PARTNUMBER != currentRowData.UDCF2) $('#grdPartNumber').dxDataGrid('instance').closeEditCell();}}");
                                                                  
                      columns.AddFor(m => m.UDCF3).Width(110)
                          .Caption("연결품번2")
                          .EditCellTemplate(new TemplateName("ddlPartnumberList2"))
                          //.SetCellValue("AA");
                          .SetCellValue("function(newData , value , currentRowData)" +
                                        "{ if(value != null) {newData.UDCF3 = value.PARTNUMBER;}" +
                                        "else {newData.UDCF3 = null}} ");// +
                                                                      
                      columns.AddFor(m => m.UDCF4).Width(110)
                          .Caption("연결품번3")
                          .EditCellTemplate(new TemplateName("ddlPartnumberList3"))
                          //.SetCellValue("AA");
                          .SetCellValue("function(newData , value , currentRowData)" +
                                        "{ if(value != null) {newData.UDCF4 = value.PARTNUMBER;}" +
                                        "else {newData.UDCF4 = null}} ");// +
                      columns.AddFor(m => m.MEMO);
                      columns.AddFor(m => m.USEYN);
                      columns.AddFor(m => m.CREATEUSER);
                      columns.AddFor(m => m.CREATEDATE).Format(f => f.Type(Format.ShortDateShortTime));
                      columns.AddFor(m => m.RECENTUSER);
                      columns.AddFor(m => m.RECENTDATE).Format(f => f.Type(Format.ShortDateShortTime));
                  })
                  .AllowColumnResizing(true)
                  .RemoteOperations(true)
                  .FilterPanel(f => f.Visible(true))
                  .ColumnAutoWidth(true)
                  .Paging(p => p.PageSize(25).Enabled(true))
                  .Pager(p => p.ShowPageSizeSelector(true).ShowNavigationButtons(true).AllowedPageSizes(new int[] { 10, 25, 50, 100, 1000 }))
                  //.StateStoring(s => s.Enabled(true).StorageKey("MSTD001_grdPartNumber").Type(StateStoringType.LocalStorage))
                  .Scrolling(s => s.Mode(GridScrollingMode.Standard))
                  .ShowRowLines(true)
                  .KeyboardNavigation(options =>
                  {
                      // MoveFocus : 엔터시 이동
                      // startEdit : 엔터시 EditMode 다시 엔터시 이동
                      options.EnterKeyAction(GridEnterKeyAction.MoveFocus);
                      // 엔터 이외 키 입력시 EditMode 여부
                      options.EditOnKeyPress(true);
                      // Row : 엔터시 열 단위 이동 →
                      // Column : 엔터시 행 단위 이동 ↓
                      options.EnterKeyDirection(GridEnterKeyDirection.Column);
                  })
                  .SearchPanel(searchPanel => searchPanel
                      .Visible(true)
                      .Width(180)
                      .Placeholder("Search...")
                  )
                  .FilterRow(filterRow => filterRow
                      .Visible(true)
                      .ApplyFilter(GridApplyFilterMode.Auto)
                  )
                  .ShowBorders(true)
                  .AllowColumnResizing(true)
                  .Editing(e =>
                      e.Mode(GridEditMode.Batch)
                          .AllowUpdating(new JS("iudAuth()"))
                          .AllowAdding(new JS("iudAuth()"))
                          .AllowDeleting(new JS("iudAuth()"))
                  )
                  .RowAlternationEnabled(true)
                  .Export(e => e.Enabled(true).ExcelFilterEnabled(true))
                  .OnFileSaving("function(e) {e.fileName = getExportFileName(this, fullScreenName, '" + "" + "') ;}")
                  .OnInitialized("grdPartNumber_OnInitialized")
                  .Option("KEY_FIELD", new object[] { "PARTNUMBER" })
                  .Option("INIT_FIELD", new object[] { "USEYN", "PARTNUMBER" })
                  .Option("IGNORE_AUTOWIDTH", new object[] { })
                  .OnInitNewRow("grdPartNumber_OnInitNewRow")                  

                  )
        </div>
    </div>
</div>

@using (Html.DevExtreme().NamedTemplate("ddlPartnumberList1"))
{
    @(Html.DevExtreme().DropDownBox()
          .ID("ddlPartnumberList1")
          .Value(new JS("data.UDCF2"))
          .DataSource(d => d.WebApi().Controller("COMA001WebApi").LoadAction("PRODUCT_LIST")
              .Key("PARTNUMBER")
          )
          .DisplayExpr("PARTNUMBER")
          .ValueExpr("PARTNUMBER")
          .AcceptCustomValue(true)
          .DropDownOptions(c => c.Width("600"))
          .ShowClearButton(true)
          .OnValueChanged(@<text>
                              function(e){
                              setValue(e.value);
                              }
                           </text>)
          .ContentTemplate(new TemplateName("grdComPartnumber"))
          )
}

@using (Html.DevExtreme().NamedTemplate("ddlPartnumberList2"))
{
    @(Html.DevExtreme().DropDownBox()
          .ID("ddlPartnumberList2")
          .Value(new JS("data.UDCF3"))
          .DataSource(d => d.WebApi().Controller("COMA001WebApi").LoadAction("PRODUCT_LIST")
              .Key("PARTNUMBER")
          )
          .DisplayExpr("PARTNUMBER")
          .ValueExpr("PARTNUMBER")
          .AcceptCustomValue(true)
          .DropDownOptions(c => c.Width("600"))
          .ShowClearButton(true)
          .OnValueChanged(@<text>
                              function(e){
                              setValue(e.value);
                              }
                           </text>)
          .ContentTemplate(new TemplateName("grdComPartnumber"))
          )
}

@using (Html.DevExtreme().NamedTemplate("ddlPartnumberList3"))
{
    @(Html.DevExtreme().DropDownBox()
          .ID("ddlPartnumberList3")
          .Value(new JS("data.UDCF4"))
          .DataSource(d => d.WebApi().Controller("COMA001WebApi").LoadAction("PRODUCT_LIST")
              .Key("PARTNUMBER")
          )
          .DisplayExpr("PARTNUMBER")
          .ValueExpr("PARTNUMBER")
          .AcceptCustomValue(true)
          .DropDownOptions(c => c.Width("600"))
          .ShowClearButton(true)
          .OnValueChanged(@<text>
                              function(e){
                              setValue(e.value);
                              }
                           </text>)
          .ContentTemplate(new TemplateName("grdComPartnumber"))
          )
}

@using (Html.DevExtreme().NamedTemplate("grdComPartnumber"))
{
    @(Html.DevExtreme().DataGrid<PartNumberMaster>()
                                          .ID("grdComPartnumberList")
                                          .DataSource(new JS(@"component.option(""dataSource"")"))
                                          .Columns(columns =>
                                          {
                                              columns.AddFor(m => m.UDCF1)
                                                  .Lookup(lookup => lookup
                                                      .DataSource(d => d.WebApi()
                                                          .Controller("COMA003WebApi").Key("SYSCODE")
                                                          .LoadAction("CARTYPE_LIST"))
                                                      .DisplayExpr("SYSCODENAME")
                                                      .ValueExpr("SYSCODE")
                                                  ).Width(100)
                                                  .Caption(@LabelText.CARTYPE);
                                              columns.AddFor(m => m.PARTNUMBER);
                                              columns.AddFor(m => m.PRODUCTNAME);
                              //columns.AddFor(m => m.PRODUCTTYPE)
                              //    .Lookup(lookup => lookup
                              //        .DataSource(d => d.WebApi()
                              //            .Controller("COMA003WebApi").Key("SYSCODE")
                              //            .LoadAction("PRODUCTTYPE_LIST"))
                              //        .DisplayExpr("SYSCODENAME")
                              //        .ValueExpr("SYSCODE")
                              //    );
                          })
                                          .HoverStateEnabled(true)
                                          .Paging(p => p.PageSize(10))
                                          .FilterRow(f => f.Visible(true))
                                          .Scrolling(s => s.Mode(GridScrollingMode.Infinite))
                                          .Height(345)
                                          .Selection(s => s.Mode(SelectionMode.Single))
                                          .SelectedRowKeys(new JS(@"component.option(""value"")"))
                                          .OnSelectionChanged(@<text>
                                            function(selectedItems) {
                                            var haskey;
                                            var keys = selectedItems.selectedRowKeys;

                                            if(typeof keys !== undefined && keys.length > 0)
                                            {
                                            haskey = true;
                                            }

                                            //selectedItems.component.
                                            if(typeof keys !== 'undefined' && keys.length > 0){
                                            if(!(selectedItems.currentDeselectedRowKeys.length > 1)){
                                            component.close();
                                            }
                                            }

                                            if (haskey != undefined){
                                            component.option("value", selectedItems.selectedRowsData[0])
                                            console.log(selectedItems.selectedRowsData[0])
                                            $('#grdComPartnumberList').dxDataGrid('instance').clearSelection();
                                            //$('#grdComPartnumberList').dxDataGrid('instance').closeEditCell();
                                            }
                                            }
                                        </text>)
    )
}
<script>
    function grdPartNumber_OnInitialized(e) {
        userCustomGrid(e);
    }

    function AA(newData, value, currentRowData) {
        console.log(newData);
        console.log(value);
        console.log(currentRowData);

    }


    function grdPartNumber_OnInitNewRow(e) {
        e.data.SAFETYINVENTQUANTITY = 0;
        e.data.PARTNUMBERPHOTO = new DevExpress.data.Guid().toString();
    }

    function grdPartNumber_OnBeforeSend(method, ajaxOptions) {
        if (method == "insert") {

            var tmp = JSON.parse(ajaxOptions.data.values);

            if (tmp.UNITCODE == "U02") {
                tmp.SAFETYINVENTQUANTITY = Math.round(tmp.SAFETYINVENTQUANTITY * 1000);
                tmp.BOXPERQUANTITY = Math.round(tmp.BOXPERQUANTITY * 1000);
            } else {
                tmp.SAFETYINVENTQUANTITY = Math.round(tmp.SAFETYINVENTQUANTITY);
                tmp.BOXPERQUANTITY = Math.round(tmp.BOXPERQUANTITY);
            }
            ajaxOptions.data.values = JSON.stringify(tmp);

        } else if (method == "update") {
            var index = $('#grdPartNumber').dxDataGrid('instance').getRowIndexByKey(ajaxOptions.data.key);
            var unitcode = $('#grdPartNumber').dxDataGrid('instance').cellValue(index, 'UNITCODE');

            var tmp = JSON.parse(ajaxOptions.data.values);

            if (unitcode == "U02") {
                if (tmp.SAFETYINVENTQUANTITY != undefined)
                    tmp.SAFETYINVENTQUANTITY = Math.round(tmp.SAFETYINVENTQUANTITY * 1000);
                if (tmp.BOXPERQUANTITY != undefined)
                    tmp.BOXPERQUANTITY = Math.round(tmp.BOXPERQUANTITY * 1000);
            } else {
                if (tmp.SAFETYINVENTQUANTITY != undefined)
                    tmp.SAFETYINVENTQUANTITY = Math.round(tmp.SAFETYINVENTQUANTITY);
                if (tmp.BOXPERQUANTITY != undefined)
                    tmp.BOXPERQUANTITY = Math.round(tmp.BOXPERQUANTITY);
            }
            ajaxOptions.data.values = JSON.stringify(tmp);
        }
    }
</script>


@Html.Partial("_DropdownPartial")