@using JSMES.WebUI.Alpha.Models.MasterStruct;

@{
    ViewBag.Title = "Main";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            @(Html.DevExtreme().DataGrid<ProcessMaster>()
                          .ID("grdProcessMaster")
                          .DataSource(d => d.WebApi().Controller("MSTF001WebApi").Key("PROCESSID"))
                          .Columns(columns =>
                          {
                              columns.AddFor(m => m.PROCESSCODE).SortOrder(SortOrder.Asc);
                              columns.AddFor(m => m.PROCESSNAME);
                              columns.AddFor(m => m.PROCESSGROUP)
                                  .Lookup(lookup => lookup.DataSource(d => d.WebApi()
                                      .Controller("COMA003WebApi")
                                      .Key("SYSCODE")
                                      .LoadAction("PROCESSGROUP_List")
                                      )
                                      .DisplayExpr("SYSCODENAME")
                                      .ValueExpr("SYSCODE")
                                  );
                              columns.AddFor(m => m.MEMO).EditCellTemplate(@<text>@(Html.DevExtreme().TextArea().Height(100).Value(new JS("data.MEMO")).OnValueChanged("function(e){setValue(e.value);}"))</text>);
                            columns.AddFor(m => m.USEYN);
                            columns.AddFor(m => m.CREATEUSER);
                            columns.AddFor(m => m.CREATEDATE).Format(f => f.Type(Format.ShortDateShortTime));
                            columns.AddFor(m => m.RECENTUSER);
                            columns.AddFor(m => m.RECENTDATE).Format(f => f.Type(Format.ShortDateShortTime));
                        })
                        .RemoteOperations(true)
                        .FilterPanel(f => f.Visible(true))
                        .ColumnAutoWidth(true)
                        .Paging(p => p.PageSize(25).Enabled(true))
                        .Pager(p => p.ShowPageSizeSelector(true).ShowNavigationButtons(true).AllowedPageSizes(new int[] { 10, 25, 50, 100, 1000 }))
                        .Scrolling(s => s.Mode(GridScrollingMode.Standard))
                  .KeyboardNavigation(options =>
                  {
                      // MoveFocus : 엔터시 이동
                      // startEdit : 엔터시 EditMode 다시 엔터시 이동
                      options.EnterKeyAction(GridEnterKeyAction.MoveFocus);
                      // 엔터 이외 키 입력시 EditMode 여부
                      options.EditOnKeyPress(true);
                      // Row : 엔터시 열 단위 이동 →
                      // Column : 엔터시 행 단위 이동 ↓
                      options.EnterKeyDirection(GridEnterKeyDirection.Column);
                  })
                        .SearchPanel(searchPanel => searchPanel
                            .Visible(true)
                            .Width(180)
                            .Placeholder("Search...")
                        )
                        .FilterRow(filterRow => filterRow
                            .Visible(true)
                            .ApplyFilter(GridApplyFilterMode.Auto)
                        )
                        .ShowBorders(true)
                        .AllowColumnResizing(true)
                        .Editing(e =>
                            e.Mode(GridEditMode.Batch)
                                .AllowUpdating(new JS("iudAuth()"))
                                .AllowAdding(new JS("iudAuth()"))
                                .AllowDeleting(new JS("iudAuth()"))
                        )
                        .RowAlternationEnabled(true)
                        .Export(e => e.Enabled(true))
                        .OnFileSaving("function(e) {e.fileName = getExportFileName(this, fullScreenName, '') ;}")
                        .ShowRowLines(true)
                        .OnInitialized("grdProcessMaster_OnInitialized")
                        .Option("KEY_FIELD", new object[] { "PROCESSCODE" })
                        .Option("INIT_FIELD", new object[] { "USEYN" })
                        //.Option("USE_REQUIRED_HEADER", true)
            )
        </div>
    </div>
</div>

<script>
    function grdProcessMaster_OnInitialized(e) {
        userCustomGrid(e);
    }
</script>
